<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Ming Blog</title>
    <link>https://imingx.github.io/</link>
    <description>Recent content on Ming Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Oct 2021 12:44:02 +0800</lastBuildDate><atom:link href="https://imingx.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>「Algorithm」02 Data Structure</title>
      <link>https://imingx.github.io/posts/algorithm_02/</link>
      <pubDate>Tue, 12 Oct 2021 12:44:02 +0800</pubDate>
      
      <guid>https://imingx.github.io/posts/algorithm_02/</guid>
      <description>链表与邻接表：树与图的存储 栈与队列：单调队列、单调栈 kmp Trie 并查集 堆 Hash表  链表与邻接表：树与图的存储 用数组来模拟这些结构，不适用struct和STL。目的是为了提高效率
1 2 3 4 5 6 7  struct Node { int val; Node * next; }; Node * p = new Node();   面试题较多，但是new一个节点是比较慢的，做题不需要。
用数组模拟单链表 最常用的邻接表，存储图和树。它们都是用邻接表存储的。
以上是用数组e[N]和数组ne[N]来模拟单链表，如果是不存在，那么取-1。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70  #include&amp;lt;iostream&amp;gt; using namespace std; const int N = 1e5 + 10; // head 表示头结点的下标 // e[i]是节点i的值 // ne[i] 是节点i的next指针 // idx是一个指针，指向当前用到的点。 int head, e[N], ne[N], idx; void init() { head = -1; idx = 0; } //将x插入到头结点 void add_to_head(int x) { e[idx] = x, ne[idx] = head, head = idx, idx ++; } //将x插入到下标是k的点的后面 void add(int k, int x) { e[idx] = x, ne[idx] = ne[k], ne[k] = idx, idx ++; } //删除k后面的节点 void remove(int k) { ne[k] = ne[ne[k]]; } int main() { int m; cin &amp;gt;&amp;gt; m; init(); while ( m --) { int k, x; char op; cin &amp;gt;&amp;gt; op; if (op == &amp;#39;H&amp;#39;) { cin &amp;gt;&amp;gt; x; add_to_head(x); } else if( op == &amp;#39;D&amp;#39;) { cin &amp;gt;&amp;gt; k; if (k == 0) head = ne[head]; else remove(k - 1); }else { cin &amp;gt;&amp;gt; k &amp;gt;&amp;gt; x; add(k - 1, x); } } for (int i = head; i !</description>
    </item>
    
    <item>
      <title>Sample</title>
      <link>https://imingx.github.io/posts/language/</link>
      <pubDate>Sun, 10 Oct 2021 14:55:48 +0800</pubDate>
      
      <guid>https://imingx.github.io/posts/language/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  #include &amp;lt;bits/stdc++.h&amp;gt;using namespace std; #define rep(i,a,n) for(int i = a; i&amp;lt; n; i++) #define per(i,a,n) for(int i=n-1; i&amp;gt;=a; i--) #define pb push_back #define mp make_pair #define all(x) (x).begin(), (x).end() #define fi first #define se second #define sz(x) ((int)(x).size()) typedef vector&amp;lt;int&amp;gt; VI; typedef long long ll; typedef pair&amp;lt;int, int&amp;gt; PII; typedef double db; mt19937 mrand(random_device{}()); const ll mod = 1000000007; int rnd(int x) { return mrand() % x;} ll mulmod(ll a, ll b) {ll res=0;a%=mod;assert(b&amp;gt;=0);for(;b;b&amp;gt;&amp;gt;=1){if(b&amp;amp;1)res+=a%mod;a+=a%mod;}return res;} ll powmod(ll a, ll b) {ll res=1;a%=mod;assert(b&amp;gt;=0);for(;b;b&amp;gt;&amp;gt;=1){if(b&amp;amp;1)res*=a%mod;a*=a%mod;}return res;} ll gcd(ll a, ll b) { return b ?</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://imingx.github.io/about/</link>
      <pubDate>Sat, 02 Oct 2021 19:47:50 +0800</pubDate>
      
      <guid>https://imingx.github.io/about/</guid>
      <description>Hi, I&amp;rsquo;m gmm. Welcome to my fantasy world✨.  An undergraduate student.  Introvert &amp;amp; diffident.   A little more about me&amp;hellip; 1 2 3 4 5 6 7 8  const ming = { pronouns: &amp;#34;He&amp;#34; | &amp;#34;Him&amp;#34;, code: [&amp;#34;C&amp;amp;C++&amp;#34;, &amp;#34;Python&amp;#34;, &amp;#34;Java&amp;#34;, &amp;#34;Swift&amp;#34;], tools: [&amp;#34;JetBrains suite&amp;#34;, &amp;#34;Jupyter&amp;#34;], architecture: &amp;#34;Nothing&amp;#34;, interest: &amp;#34;Nothing&amp;#34;, goal: &amp;#34;Do my own and keep shining. Be a pessimistic far traveler&amp;#34; };   Nevertheless, I love connecting with different peopleso if you want to say hi, I&amp;rsquo;ll be happy to meet you more!</description>
    </item>
    
    
    
  </channel>
</rss>
